version:  '2.0'

services:
  backend:
    build: .
    ports:
      - "9000:9000"
#    hostname: backend.eventacs.com
    networks:
      redis-net:
        aliases:
          - backend.eventacs.com
    depends_on:
      - mysql
      - redis
      - mongo
      - mysqlfailover

  oauth-server:
    build: ./oauth-authorization-server/.
    ports:
      - "9001:9001"
    depends_on:
      - backend
      - mysql
 #   hostname: oauth-server.eventacs.com
    networks: 
      redis-net:
        aliases:
          - oauth-server.eventacs.com

 # frontend:
 #   build: ./app/.
 #   ports:
 #     - "3000:3000"
 #   hostname: frontend.eventacs.com
 #   networks:
#      redis-net:
 #       aliases:
 #         - frontend.eventacs.com
 #   depends_on:
 #     - oauth-server

  mysql:
    image: mysql
    volumes:
     - db_data:/var/lib/mysql
    restart: always
    environment:
     MYSQL_ROOT_PASSWORD: "password"
     MYSQL_DATABASE: "oauth2"
     MYSQL_USER: "pds"
     MYSQL_PASSWORD: "clave"
    ports:
     - "3306:3306"
    networks:
     - redis-net

  mysqlfailover:
    image: mysql
    volumes:
     - db_data2:/var/lib/mysql
    restart: always
    environment:
     MYSQL_ROOT_PASSWORD: "password"
     MYSQL_DATABASE: "eventacsTelegram"
     MYSQL_USER: "pds"
     MYSQL_PASSWORD: "clave"
    hostname: "mysqlfailover"
    ports:
     - "3307:3306"
    networks:
     - redis-net


  redis:
    image: redis:5.0.0-alpine
#    command: ["redis-server","--appenonly","yes"]
    environment:
      - ALLOW_EMPTY_PASSWORD= yes
    hostname: redis
    networks:
      - redis-net
    volumes:
      - redis-data/data
    ports:
      - "6379:6379"

  mongo:
    image: mongo
    restart: always
    environment:
#      MONGO_INITDB_ROOT_USERNAME: "root"
#      MONGO_INITDB_ROOT_PASSWPRD: "password"
      MONGO_INIT_DATABASE: "eventacs"
    ports:
      - "27017:27017"
    networks:
      - redis-net

networks:
  redis-net:

volumes:
  db_data:
  db_data2:
  redis-data:
