{"ast":null,"code":"import _classCallCheck from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/facundo.figoli/projects/eventacs/app/src/main/react/components/EventsSearchBox.js\";\nimport React, { Component } from \"react\";\nimport SimpleDropdown from \"./SimpleDropdown\";\nimport { Button, Container, Input } from 'reactstrap';\nimport '../styles/EventsSearchBox.css';\nimport DatePicker from \"./DatePicker\";\nimport axios from 'axios';\nvar containerStyle = {\n  width: '100%'\n};\nvar marginSmStyle = {\n  margin: '3px'\n};\n\nvar EventsSearchBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventsSearchBox, _Component);\n\n  function EventsSearchBox(props) {\n    var _this;\n\n    _classCallCheck(this, EventsSearchBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventsSearchBox).call(this, props));\n\n    _this.handleKeyword = function (e) {\n      _this.setState({\n        selectedKeyword: e.currentTarget.value\n      });\n    };\n\n    _this.state = {\n      categories: [],\n      isLoading: true,\n      selectedKeyword: \"\",\n      selectedCategories: [],\n      selectedStartDate: \"\",\n      selectedEndDate: \"\",\n      requieredStartDate: false,\n      requieredEndDate: false\n    };\n    _this.handleKeyword = _this.handleKeyword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectedCategories = _this.handleSelectedCategories.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectedStartDate = _this.handleSelectedStartDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectedEndDate = _this.handleSelectedEndDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getEvents = _this.getEvents.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.prepareEventsUrl = _this.prepareEventsUrl.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EventsSearchBox, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      fetch('/eventacs/categories').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          categories: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"handleSelectedCategories\",\n    value: function handleSelectedCategories(selected) {\n      this.setState({\n        selectedCategories: selected\n      });\n    }\n  }, {\n    key: \"handleSelectedStartDate\",\n    value: function handleSelectedStartDate(selected) {\n      this.setState({\n        selectedStartDate: selected.date.toISOString().split('T')[0]\n      });\n    }\n  }, {\n    key: \"handleSelectedEndDate\",\n    value: function handleSelectedEndDate(selected) {\n      this.setState({\n        selectedEndDate: selected.date.toISOString().split('T')[0]\n      });\n    }\n  }, {\n    key: \"getEvents\",\n    value: function getEvents() {\n      var _this3 = this;\n\n      if (this.props.hasSearches) {\n        this.props.handleNewSearches();\n      }\n\n      axios.get(this.prepareEventsUrl()).then(function (response) {\n        return _this3.props.searchHandler(response);\n      });\n    }\n  }, {\n    key: \"prepareEventsUrl\",\n    value: function prepareEventsUrl() {\n      var basePath = '/eventacs/events?';\n      var parameters = [\"keyword=\".concat(this.state.selectedKeyword), \"startDate=\".concat(this.state.selectedStartDate), \"endDate=\".concat(this.state.selectedEndDate), \"categories=\".concat(this.state.selectedCategories.map(function (c) {\n        return c.value;\n      }).join(',')), \"page=\".concat(this.props.actualPage)].join('&');\n      return basePath.concat(parameters);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        style: containerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: marginSmStyle,\n        placeholder: \"Keyword\",\n        onChange: this.handleKeyword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(SimpleDropdown, {\n        data: this.state.categories,\n        header: \"Categories\",\n        selectedHandler: this.handleSelectedCategories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(DatePicker, {\n        header: \"Start Date\",\n        selectedHandler: this.handleSelectedStartDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(DatePicker, {\n        header: \"End Date\",\n        selectedHandler: this.handleSelectedEndDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"primary\",\n        className: \"button-style\",\n        onClick: this.getEvents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Search\"), ' ');\n    }\n  }]);\n\n  return EventsSearchBox;\n}(Component);\n\nexport default EventsSearchBox;","map":{"version":3,"sources":["/Users/facundo.figoli/projects/eventacs/app/src/main/react/components/EventsSearchBox.js"],"names":["React","Component","SimpleDropdown","Button","Container","Input","DatePicker","axios","containerStyle","width","marginSmStyle","margin","EventsSearchBox","props","handleKeyword","e","setState","selectedKeyword","currentTarget","value","state","categories","isLoading","selectedCategories","selectedStartDate","selectedEndDate","requieredStartDate","requieredEndDate","bind","handleSelectedCategories","handleSelectedStartDate","handleSelectedEndDate","getEvents","prepareEventsUrl","fetch","then","response","json","data","selected","date","toISOString","split","hasSearches","handleNewSearches","get","searchHandler","basePath","parameters","map","c","join","actualPage","concat"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport SimpleDropdown from \"./SimpleDropdown\";\nimport {Button, Container, Input} from 'reactstrap';\nimport '../styles/EventsSearchBox.css';\nimport DatePicker from \"./DatePicker\";\nimport axios from 'axios';\n\nconst containerStyle = {\n  width: '100%'\n};\n\nconst marginSmStyle = {\n  margin: '3px'\n};\n\nclass EventsSearchBox extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {categories: [],\n                  isLoading: true,\n                  selectedKeyword: \"\",\n                  selectedCategories: [],\n                  selectedStartDate: \"\",\n                  selectedEndDate: \"\",\n                  requieredStartDate: false,\n                  requieredEndDate: false};\n\n    this.handleKeyword = this.handleKeyword.bind(this);\n    this.handleSelectedCategories = this.handleSelectedCategories.bind(this);\n    this.handleSelectedStartDate = this.handleSelectedStartDate.bind(this);\n    this.handleSelectedEndDate = this.handleSelectedEndDate.bind(this);\n    this.getEvents = this.getEvents.bind(this);\n    this.prepareEventsUrl = this.prepareEventsUrl.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({isLoading: true});\n\n    fetch('/eventacs/categories')\n      .then(response => response.json())\n      .then(data => this.setState({categories: data, isLoading: false}));\n  }\n\n  handleSelectedCategories(selected) {\n    this.setState({selectedCategories: selected});\n  }\n\n  handleSelectedStartDate(selected) {\n    this.setState({selectedStartDate: selected.date.toISOString().split('T')[0]});\n  }\n\n  handleSelectedEndDate(selected) {\n    this.setState({selectedEndDate: selected.date.toISOString().split('T')[0]});\n  }\n\n  handleKeyword = e => {\n    this.setState({selectedKeyword: e.currentTarget.value});\n  };\n\n  getEvents() {\n    if(this.props.hasSearches) { this.props.handleNewSearches() }\n\n    axios.get(this.prepareEventsUrl())\n      .then(response => this.props.searchHandler(response));\n  }\n\n  prepareEventsUrl() {\n    const basePath = '/eventacs/events?';\n\n    const parameters = [`keyword=${this.state.selectedKeyword}`,\n                        `startDate=${this.state.selectedStartDate}`,\n                        `endDate=${this.state.selectedEndDate}`,\n                        `categories=${this.state.selectedCategories.map(c => c.value).join(',')}`,\n                        `page=${this.props.actualPage}`].join('&');\n\n    return basePath.concat(parameters);\n  }\n\n  render() {\n    return (\n      <Container style={containerStyle}>\n        <Input style={marginSmStyle} placeholder=\"Keyword\" onChange={this.handleKeyword}/>\n        <SimpleDropdown data={this.state.categories} header={\"Categories\"} selectedHandler={this.handleSelectedCategories}/>\n        <DatePicker header={\"Start Date\"} selectedHandler={this.handleSelectedStartDate}/>\n        <DatePicker header={\"End Date\"} selectedHandler={this.handleSelectedEndDate}/>\n        <Button color=\"primary\" className={\"button-style\"} onClick={this.getEvents}>Search</Button>{' '}\n      </Container>\n    );\n  }\n\n}\n\nexport default EventsSearchBox;"]},"metadata":{},"sourceType":"module"}