{"ast":null,"code":"/*\n    Month/Year date format with slash \"/\" (also \"-\" and \".\") between numbers \n    - 11/05\n    - 06/2005\n*/\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\n\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(^|[^\\\\d/]\\\\s+|[^\\\\w\\\\s])' + '([0-9]|0[1-9]|1[012])/([0-9]{4})' + '([^\\\\d/]|$)', 'i');\nvar OPENNING_GROUP = 1;\nvar ENDING_GROUP = 4;\nvar MONTH_GROUP = 2;\nvar YEAR_GROUP = 3;\n\nexports.Parser = function ENSlashMonthFormatParser(argument) {\n  Parser.apply(this, arguments);\n\n  this.pattern = function () {\n    return PATTERN;\n  };\n\n  this.extract = function (text, ref, match, opt) {\n    var index = match.index + match[OPENNING_GROUP].length;\n    var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - (1 + match[ENDING_GROUP].length)).trim();\n    var result = new ParsedResult({\n      text: text,\n      index: index,\n      ref: ref\n    });\n    var date = null;\n    var year = match[YEAR_GROUP];\n    var month = match[MONTH_GROUP];\n    var day = 1;\n    month = parseInt(month);\n    year = parseInt(year);\n    result.start.imply('day', day);\n    result.start.assign('month', month);\n    result.start.assign('year', year);\n    result.tags['ENSlashMonthFormatParser'] = true;\n    return result;\n  };\n};","map":null,"metadata":{},"sourceType":"script"}