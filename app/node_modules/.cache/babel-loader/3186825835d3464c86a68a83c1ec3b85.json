{"ast":null,"code":"import _classCallCheck from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/facundo.figoli/projects/eventacs/app/src/main/react/components/EventsTable.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport SimpleDropdown from \"./SimpleDropdown\";\nvar tableStyle = {\n  width: '100%'\n};\n\nvar EventsTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventsTable, _Component);\n\n  function EventsTable(props) {\n    var _this;\n\n    _classCallCheck(this, EventsTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventsTable).call(this, props));\n    _this.state = {\n      events: [],\n      metadata: {},\n      userEventLists: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(EventsTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        events: this.props.data.data.events,\n        metadata: this.props.data.data.metadata,\n        userEventLists: this.getUserEventLists,\n        isLoading: false\n      });\n    }\n  }, {\n    key: \"handleSelectedEventListAction\",\n    value: function handleSelectedEventListAction() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          events = _this$state.events,\n          metadata = _this$state.metadata,\n          isLoading = _this$state.isLoading;\n\n      if (isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      if (events.length === 0) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"No events found\");\n      }\n\n      var eventsData = events.map(function (event) {\n        return React.createElement(\"tr\", {\n          key: event.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, event.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, event.category), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, event.description), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, event.start), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, event.end), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          color: \"primary\",\n          tag: Link,\n          to: \"/event-lists/add/\" + event.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Add to an EventList\"))));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Events Found: \", metadata.objectCount), React.createElement(Table, {\n        className: \"mt-4\",\n        style: tableStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        width: \"20%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        width: \"20%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"th\", {\n        width: \"20%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        width: \"20%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"th\", {\n        width: \"20%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"End\"), React.createElement(\"th\", {\n        width: \"10%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, eventsData))));\n    }\n  }]);\n\n  return EventsTable;\n}(Component);\n\nexport default EventsTable;","map":{"version":3,"sources":["/Users/facundo.figoli/projects/eventacs/app/src/main/react/components/EventsTable.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","Link","SimpleDropdown","tableStyle","width","EventsTable","props","state","events","metadata","userEventLists","isLoading","setState","data","getUserEventLists","length","eventsData","map","event","id","whiteSpace","name","category","description","start","end","objectCount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport SimpleDropdown from \"./SimpleDropdown\";\n\nconst tableStyle = {\n  width: '100%'\n};\n\nclass EventsTable extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {events: [], metadata: {}, userEventLists: [], isLoading: true};\n  }\n\n  componentDidMount() {\n    this.setState({events: this.props.data.data.events,\n                   metadata: this.props.data.data.metadata,\n                   userEventLists: this.getUserEventLists,\n                   isLoading: false});\n  }\n\n  handleSelectedEventListAction() {\n\n  }\n\n  render() {\n    const {events, metadata, isLoading} = this.state;\n\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    if (events.length === 0) {\n      return <p>No events found</p>;\n    }\n\n    const eventsData = events.map(event => {\n      return(\n        <tr key={event.id}>\n          <td style={{whiteSpace: 'nowrap'}}>{event.name}</td>\n          <td>{event.category}</td>\n          <td>{event.description}</td>\n          <td>{event.start}</td>\n          <td>{event.end}</td>\n          <td>\n            <ButtonGroup>\n              <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/event-lists/add/\" + event.id}>Add to an EventList</Button>\n            </ButtonGroup>\n          </td>\n        </tr>\n      );\n    });\n\n    return (\n      <div>\n        <Container>\n\n          <h3>Events Found: {metadata.objectCount}</h3>\n\n          <Table className=\"mt-4\" style={tableStyle}>\n            <thead>\n            <tr>\n              <th width=\"20%\">Name</th>\n              <th width=\"20%\">Category</th>\n              <th width=\"20%\">Description</th>\n              <th width=\"20%\">Start</th>\n              <th width=\"20%\">End</th>\n              <th width=\"10%\">Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {eventsData}\n            </tbody>\n          </Table>\n\n        </Container>\n      </div>\n    );\n  }\n\n}\n\nexport default EventsTable;\n"]},"metadata":{},"sourceType":"module"}