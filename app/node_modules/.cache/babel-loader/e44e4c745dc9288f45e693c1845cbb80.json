{"ast":null,"code":"var options = exports.options = require('./options');\n\nexports.parser = require('./parsers/parser');\nexports.refiner = require('./refiners/refiner');\nexports.Parser = exports.parser.Parser;\nexports.Refiner = exports.refiner.Refiner;\nexports.Filter = exports.refiner.Filter;\nexports.ParsedResult = require('./result').ParsedResult;\nexports.ParsedComponents = require('./result').ParsedComponents;\n\nvar Chrono = function Chrono(option) {\n  option = option || exports.options.casualOption();\n  this.option = option;\n  this.parsers = new Object(option.parsers);\n  this.refiners = new Object(option.refiners);\n};\n\nChrono.prototype.parse = function (text, refDate, opt) {\n  refDate = refDate || new Date();\n  opt = opt || {};\n  var allResults = [];\n  this.parsers.forEach(function (parser) {\n    var results = parser.execute(text, refDate, opt);\n    allResults = allResults.concat(results);\n  });\n  allResults.sort(function (a, b) {\n    return a.index - b.index;\n  });\n  this.refiners.forEach(function (refiner) {\n    allResults = refiner.refine(text, allResults, opt);\n  });\n  return allResults;\n};\n\nChrono.prototype.parseDate = function (text, refDate, opt) {\n  var results = this.parse(text, refDate, opt);\n\n  if (results.length > 0) {\n    return results[0].start.date();\n  }\n\n  return null;\n};\n\nexports.Chrono = Chrono;\nexports.strict = new Chrono(options.strictOption());\nexports.casual = new Chrono(options.casualOption());\nexports.en = new Chrono(options.mergeOptions([options.en.casual, options.commonPostProcessing]));\nexports.en_GB = new Chrono(options.mergeOptions([options.en_GB.casual, options.commonPostProcessing]));\nexports.de = new Chrono(options.mergeOptions([options.de.casual, options.en, options.commonPostProcessing]));\nexports.es = new Chrono(options.mergeOptions([options.es.casual, options.en, options.commonPostProcessing]));\nexports.fr = new Chrono(options.mergeOptions([options.fr.casual, options.en, options.commonPostProcessing]));\nexports.ja = new Chrono(options.mergeOptions([options.ja.casual, options.en, options.commonPostProcessing]));\n\nexports.parse = function () {\n  return exports.casual.parse.apply(exports.casual, arguments);\n};\n\nexports.parseDate = function () {\n  return exports.casual.parseDate.apply(exports.casual, arguments);\n};","map":null,"metadata":{},"sourceType":"script"}