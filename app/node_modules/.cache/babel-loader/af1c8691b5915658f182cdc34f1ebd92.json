{"ast":null,"code":"import _regeneratorRuntime from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/facundo.figoli/projects/eventacs/app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/facundo.figoli/projects/eventacs/app/src/main/react/components/AppNavbar.js\";\nimport React, { Component } from 'react';\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport LoginForm from \"./LoginForm\";\nimport SigninForm from \"./SigninForm\";\nimport axios from \"axios\";\n\nvar AppNavbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppNavbar, _Component);\n\n  function AppNavbar(props) {\n    var _this;\n\n    _classCallCheck(this, AppNavbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppNavbar).call(this, props));\n\n    _this.onSigninForm = function (username, password) {\n      _this.signinData = {\n        username: username,\n        password: password\n      };\n    };\n\n    _this.state = {\n      isOpen: false,\n      isLoggedIn: false,\n      toggleLoginForm: false,\n      toggleSigninForm: false\n    };\n    _this.signinData = {\n      username: \"\",\n      password: \"\"\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.signin = _this.signin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.login = _this.login.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.logout = _this.logout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleLoginForm = _this.toggleLoginForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleSigninForm = _this.toggleSigninForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLoginForm = _this.onLoginForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSigninForm = _this.onSigninForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AppNavbar, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen,\n        isLoggedIn: this.state.isLoggedIn\n      });\n    }\n  }, {\n    key: \"onLoginForm\",\n    value: function onLoginForm(username, password) {\n      this.login({\n        username: username,\n        password: password\n      });\n    }\n  }, {\n    key: \"signin\",\n    value: function () {\n      var _signin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(signinData) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"/signin\", {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(signinData)\n                }).then(function () {});\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function signin(_x) {\n        return _signin.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"login\",\n    value: function login(loginData) {\n      var _this2 = this;\n\n      axios.post('/eventacs/login', {\n        name: loginData.username,\n        encryptedPassword: loginData.password\n      }, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        _this2.props.userLoginHandler(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(logoutData) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"/logout\", {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(logoutData)\n                }).then(function () {});\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function logout(_x2) {\n        return _logout.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"toggleLoginForm\",\n    value: function toggleLoginForm() {\n      this.setState({\n        toggleLoginForm: !this.state.toggleLoginForm\n      });\n    }\n  }, {\n    key: \"toggleSigninForm\",\n    value: function toggleSigninForm() {\n      this.setState({\n        toggleSigninForm: !this.state.toggleSigninForm,\n        toggleLoginForm: this.state.toggleLoginForm\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var modalLogin, modalSignin;\n\n      if (this.state.toggleLoginForm) {\n        modalLogin = React.createElement(LoginForm, {\n          loginHandler: this.onLoginForm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.toggleSigninForm) {\n        modalSignin = React.createElement(SigninForm, {\n          signinHandler: this.onSigninForm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Navbar, {\n        color: \"dark\",\n        dark: true,\n        expand: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        tag: Link,\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Home\"), React.createElement(NavbarToggler, {\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        onClick: function onClick() {\n          return _this3.toggleLoginForm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Login\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        onClick: function onClick() {\n          return _this3.toggleSigninForm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Signin\")))), modalLogin, modalSignin);\n    }\n  }]);\n\n  return AppNavbar;\n}(Component);\n\nexport { AppNavbar as default };","map":{"version":3,"sources":["/Users/facundo.figoli/projects/eventacs/app/src/main/react/components/AppNavbar.js"],"names":["React","Component","Collapse","Nav","Navbar","NavbarBrand","NavbarToggler","NavItem","NavLink","Link","LoginForm","SigninForm","axios","AppNavbar","props","onSigninForm","username","password","signinData","state","isOpen","isLoggedIn","toggleLoginForm","toggleSigninForm","toggle","bind","signin","login","logout","onLoginForm","setState","fetch","method","headers","body","JSON","stringify","then","loginData","post","name","encryptedPassword","response","userLoginHandler","data","catch","error","console","log","logoutData","modalLogin","modalSignin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport LoginForm from \"./LoginForm\";\nimport SigninForm from \"./SigninForm\";\nimport axios from \"axios\";\n\nexport default class AppNavbar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {isOpen: false, isLoggedIn: false, toggleLoginForm: false, toggleSigninForm: false};\n    this.signinData = {username: \"\", password: \"\"};\n    this.toggle = this.toggle.bind(this);\n    this.signin = this.signin.bind(this);\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.toggleLoginForm = this.toggleLoginForm.bind(this);\n    this.toggleSigninForm = this.toggleSigninForm.bind(this);\n    this.onLoginForm = this.onLoginForm.bind(this);\n    this.onSigninForm = this.onSigninForm.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      isLoggedIn: this.state.isLoggedIn\n    });\n  }\n\n  onLoginForm(username, password) {\n    this.login({username: username, password: password})\n  };\n\n  onSigninForm = (username, password) => {\n    this.signinData = {username, password}\n  };\n\n  async signin(signinData) {\n    await fetch(`/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(signinData),\n    }).then(() => {\n\n    });\n  }\n\n  login(loginData) {\n    axios.post('/eventacs/login',\n                {name: loginData.username, encryptedPassword: loginData.password},\n                {headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'}\n                })\n      .then(response => {\n        this.props.userLoginHandler(response.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  async logout(logoutData) {\n    await fetch(`/logout`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(logoutData),\n    }).then(() => {\n\n    });\n  }\n\n  toggleLoginForm() {\n    this.setState({toggleLoginForm: !this.state.toggleLoginForm});\n  }\n\n  toggleSigninForm() {\n    this.setState({toggleSigninForm: !this.state.toggleSigninForm, toggleLoginForm: this.state.toggleLoginForm});\n  }\n\n  render() {\n    let modalLogin, modalSignin;\n\n    if(this.state.toggleLoginForm) { modalLogin = <LoginForm loginHandler={this.onLoginForm}/>; }\n    if(this.state.toggleSigninForm) { modalSignin = <SigninForm signinHandler={this.onSigninForm}/>; }\n\n    return (\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\n        <NavbarToggler onClick={this.toggle}/>\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink onClick={() => this.toggleLoginForm()}>Login</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink onClick={() => this.toggleSigninForm()}>Signin</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n        {modalLogin}\n        {modalSignin}\n      </Navbar>\n    );\n  }\n\n}"]},"metadata":{},"sourceType":"module"}