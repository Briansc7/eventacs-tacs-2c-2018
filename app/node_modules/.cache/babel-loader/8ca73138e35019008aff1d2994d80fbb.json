{"ast":null,"code":"/*\n    \n    \n*/\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\n\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /今日|当日|昨日|明日|今夜|今夕|今晩|今朝/i;\n\nexports.Parser = function JPCasualDateParser() {\n  Parser.apply(this, arguments);\n\n  this.pattern = function () {\n    return PATTERN;\n  };\n\n  this.extract = function (text, ref, match, opt) {\n    var index = match.index;\n    var text = match[0];\n    var result = new ParsedResult({\n      index: index,\n      text: text,\n      ref: ref\n    });\n    var refMoment = moment(ref);\n    var startMoment = refMoment.clone();\n\n    if (text == '今夜' || text == '今夕' || text == '今晩') {\n      // Normally means this coming midnight \n      result.start.imply('hour', 22);\n      result.start.imply('meridiem', 1);\n    } else if (text == '明日') {\n      // Check not \"Tomorrow\" on late night\n      if (refMoment.hour() > 4) {\n        startMoment.add(1, 'day');\n      }\n    } else if (text == '昨日') {\n      startMoment.add(-1, 'day');\n    } else if (text.match(\"今朝\")) {\n      result.start.imply('hour', 6);\n      result.start.imply('meridiem', 0);\n    }\n\n    result.start.assign('day', startMoment.date());\n    result.start.assign('month', startMoment.month() + 1);\n    result.start.assign('year', startMoment.year());\n    result.tags['JPCasualDateParser'] = true;\n    return result;\n  };\n};","map":null,"metadata":{},"sourceType":"script"}