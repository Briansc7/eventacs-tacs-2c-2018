{"ast":null,"code":"/*\r\n\r\n\r\n*/\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\n\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)il y a\\s*([0-9]+|une?)\\s*(minutes?|heures?|semaines?|jours?|mois|années?|ans?)(?=(?:\\W|$))/i;\n\nexports.Parser = function FRTimeAgoFormatParser() {\n  Parser.apply(this, arguments);\n\n  this.pattern = function () {\n    return PATTERN;\n  };\n\n  this.extract = function (text, ref, match, opt) {\n    if (match.index > 0 && text[match.index - 1].match(/\\w/)) return null;\n    var text = match[0];\n    text = match[0].substr(match[1].length, match[0].length - match[1].length);\n    index = match.index + match[1].length;\n    var result = new ParsedResult({\n      index: index,\n      text: text,\n      ref: ref\n    });\n    result.tags['FRTimeAgoFormatParser'] = true;\n    var num = parseInt(match[2]);\n\n    if (isNaN(num)) {\n      if (match[2].match(/demi/)) {\n        num = 0.5;\n      } else {\n        num = 1;\n      }\n    }\n\n    var date = moment(ref);\n\n    if (match[3].match(/heure/) || match[3].match(/minute/)) {\n      if (match[3].match(/heure/)) {\n        date.add(-num, 'hour');\n      } else if (match[3].match(/minute/)) {\n        date.add(-num, 'minute');\n      }\n\n      result.start.imply('day', date.date());\n      result.start.imply('month', date.month() + 1);\n      result.start.imply('year', date.year());\n      result.start.assign('hour', date.hour());\n      result.start.assign('minute', date.minute());\n      return result;\n    }\n\n    if (match[3].match(/semaine/)) {\n      date.add(-num, 'week');\n      result.start.imply('day', date.date());\n      result.start.imply('month', date.month() + 1);\n      result.start.imply('year', date.year());\n      result.start.imply('weekday', date.day());\n      return result;\n    }\n\n    if (match[3].match(/jour/)) {\n      date.add(-num, 'd');\n    }\n\n    if (match[3].match(/mois/)) {\n      date.add(-num, 'month');\n    }\n\n    if (match[3].match(/années?|ans?/)) {\n      date.add(-num, 'year');\n    }\n\n    result.start.assign('day', date.date());\n    result.start.assign('month', date.month() + 1);\n    result.start.assign('year', date.year());\n    return result;\n  };\n};","map":null,"metadata":{},"sourceType":"script"}