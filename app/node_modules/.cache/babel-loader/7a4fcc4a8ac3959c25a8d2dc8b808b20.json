{"ast":null,"code":"/*\r\n\r\n\r\n*/\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\n\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar updateParsedComponent = require('../EN/ENWeekdayParser').updateParsedComponent;\n\nvar DAYS_OFFSET = {\n  'dimanche': 0,\n  'dim': 0,\n  'lundi': 1,\n  'lun': 1,\n  'mardi': 2,\n  'mar': 2,\n  'mercredi': 3,\n  'mer': 3,\n  'jeudi': 4,\n  'jeu': 4,\n  'vendredi': 5,\n  'ven': 5,\n  'samedi': 6,\n  'sam': 6\n};\nvar PATTERN = new RegExp('(\\\\s|^)' + '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' + '(?:(ce)\\\\s*)?' + '(' + Object.keys(DAYS_OFFSET).join('|') + ')' + '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' + '(?:\\\\s*(dernier|prochain)\\\\s*)?' + '(?=\\\\W|$)', 'i');\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\nexports.Parser = function FRWeekdayParser() {\n  Parser.apply(this, arguments);\n\n  this.pattern = function () {\n    return PATTERN;\n  };\n\n  this.extract = function (text, ref, match, opt) {\n    var index = match.index + match[1].length;\n    var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n    var result = new ParsedResult({\n      index: index,\n      text: text,\n      ref: ref\n    });\n    var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n    var offset = DAYS_OFFSET[dayOfWeek];\n    if (offset === undefined) return null;\n    var modifier = null;\n    var prefix = match[PREFIX_GROUP];\n    var postfix = match[POSTFIX_GROUP];\n\n    if (prefix || postfix) {\n      var norm = prefix || postfix;\n      norm = norm.toLowerCase();\n\n      if (norm == 'dernier') {\n        modifier = 'last';\n      } else if (norm == 'prochain') {\n        modifier = 'next';\n      } else if (norm == 'ce') {\n        modifier = 'this';\n      }\n    }\n\n    updateParsedComponent(result, ref, offset, modifier);\n    result.tags['FRWeekdayParser'] = true;\n    return result;\n  };\n};","map":null,"metadata":{},"sourceType":"script"}