{"ast":null,"code":"var moment = require('moment');\n\nfunction ParsedResult(result) {\n  result = result || {};\n  this.ref = result.ref;\n  this.index = result.index;\n  this.text = result.text;\n  this.tags = result.tags || {};\n  this.start = new ParsedComponents(result.start, result.ref);\n\n  if (result.end) {\n    this.end = new ParsedComponents(result.end, result.ref);\n  }\n}\n\nParsedResult.prototype.clone = function () {\n  var result = new ParsedResult(this);\n  result.tags = JSON.parse(JSON.stringify(this.tags));\n  result.start = this.start.clone();\n\n  if (this.end) {\n    result.end = this.end.clone();\n  }\n};\n\nParsedResult.prototype.hasPossibleDates = function () {\n  return this.start.isPossibleDate() && (!this.end || this.end.isPossibleDate());\n};\n\nfunction ParsedComponents(components, ref) {\n  this.knownValues = {};\n  this.impliedValues = {};\n\n  if (components) {\n    for (key in components) {\n      this.knownValues[key] = components[key];\n    }\n  }\n\n  if (ref) {\n    ref = moment(ref);\n    this.imply('day', ref.date());\n    this.imply('month', ref.month() + 1);\n    this.imply('year', ref.year());\n  }\n\n  this.imply('hour', 12);\n  this.imply('minute', 0);\n  this.imply('second', 0);\n  this.imply('millisecond', 0);\n}\n\nParsedComponents.prototype.clone = function () {\n  var component = new ParsedComponents();\n  component.knownValues = JSON.parse(JSON.stringify(this.knownValues));\n  component.impliedValues = JSON.parse(JSON.stringify(this.impliedValues));\n  return component;\n};\n\nParsedComponents.prototype.get = function (component, value) {\n  if (component in this.knownValues) return this.knownValues[component];\n  if (component in this.impliedValues) return this.impliedValues[component];\n};\n\nParsedComponents.prototype.assign = function (component, value) {\n  this.knownValues[component] = value;\n  delete this.impliedValues[component];\n};\n\nParsedComponents.prototype.imply = function (component, value) {\n  if (component in this.knownValues) return;\n  this.impliedValues[component] = value;\n};\n\nParsedComponents.prototype.isCertain = function (component) {\n  return component in this.knownValues;\n};\n\nParsedComponents.prototype.isPossibleDate = function () {\n  var dateMoment = this.moment();\n\n  if (this.isCertain('timezoneOffset')) {\n    dateMoment.utcOffset(this.get('timezoneOffset'));\n  }\n\n  if (dateMoment.get('year') != this.get('year')) return false;\n  if (dateMoment.get('month') != this.get('month') - 1) return false;\n  if (dateMoment.get('date') != this.get('day')) return false;\n  if (dateMoment.get('hour') != this.get('hour')) return false;\n  if (dateMoment.get('minute') != this.get('minute')) return false;\n  return true;\n};\n\nParsedComponents.prototype.date = function () {\n  var dateMoment = this.moment();\n  return dateMoment.toDate();\n};\n\nParsedComponents.prototype.moment = function () {\n  var dateMoment = moment();\n  dateMoment.set('year', this.get('year'));\n  dateMoment.set('month', this.get('month') - 1);\n  dateMoment.set('date', this.get('day'));\n  dateMoment.set('hour', this.get('hour'));\n  dateMoment.set('minute', this.get('minute'));\n  dateMoment.set('second', this.get('second'));\n  dateMoment.set('millisecond', this.get('millisecond')); // Javascript Date Object return minus timezone offset\n\n  var currentTimezoneOffset = dateMoment.utcOffset();\n  var targetTimezoneOffset = this.isCertain('timezoneOffset') ? this.get('timezoneOffset') : currentTimezoneOffset;\n  var adjustTimezoneOffset = targetTimezoneOffset - currentTimezoneOffset;\n  dateMoment.add(-adjustTimezoneOffset, 'minutes');\n  return dateMoment;\n};\n\nexports.ParsedComponents = ParsedComponents;\nexports.ParsedResult = ParsedResult;","map":null,"metadata":{},"sourceType":"script"}