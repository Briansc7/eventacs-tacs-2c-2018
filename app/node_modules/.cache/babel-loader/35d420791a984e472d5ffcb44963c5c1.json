{"ast":null,"code":"/*\n\n\n*/\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\n\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)((this)?\\s*(morning|afternoon|evening|noon))/i;\nvar TIME_MATCH = 4;\n\nexports.Parser = function ENCasualTimeParser() {\n  Parser.apply(this, arguments);\n\n  this.pattern = function () {\n    return PATTERN;\n  };\n\n  this.extract = function (text, ref, match, opt) {\n    var text = match[0].substr(match[1].length);\n    var index = match.index + match[1].length;\n    var result = new ParsedResult({\n      index: index,\n      text: text,\n      ref: ref\n    });\n    if (!match[TIME_MATCH]) TIME_MATCH = 3;\n\n    if (match[TIME_MATCH] == \"afternoon\") {\n      result.start.imply('hour', opt['afternoon'] ? opt['afternoon'] : 15);\n    } else if (match[TIME_MATCH] == \"evening\") {\n      result.start.imply('hour', opt['evening'] ? opt['evening'] : 18);\n    } else if (match[TIME_MATCH] == \"morning\") {\n      result.start.imply('hour', opt['morning'] ? opt['morning'] : 6);\n    } else if (match[TIME_MATCH] == \"noon\") {\n      result.start.imply('hour', opt['noon'] ? opt['noon'] : 12);\n    }\n\n    result.tags['ENCasualTimeParser'] = true;\n    return result;\n  };\n};","map":null,"metadata":{},"sourceType":"script"}